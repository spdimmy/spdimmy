import React, {useEffect} from 'react';

function App() {
  useEffect(() => {
    (function () {
      const triggerElement = document.querySelector('.fun-block__title');
      const phrases = [
        `This's my webpage`,
        `GO!`,
        `<3`,
        `Log Out`,
      ];

      let step = 1;
      let prevStep = null;

      const symbolsCount = 80;

      function updateContent() {
        triggerElement.textContent = phrases[step - 1];
      }

      function updateClass() {
        // Remove prev class
        if (prevStep !== null) triggerElement.classList.remove(`fun-block__title--step-${prevStep}`);

        triggerElement.classList.add(`fun-block__title--step-${step}`);

      }

      function click() {
        navigator.vibrate(40);
        update();
      }

      function update() {
        step++;

        if (step > phrases.length) step = 1;

        updateContent();
        updateClass();

        // Transit
        if (step === 2) {
          navigator.vibrate(400);
          triggerElement.addEventListener('animationend', update);
        }

        if (step === 3) {
          triggerElement.removeEventListener('animationend', update);

          // Add symbols with timeout
          for (let i = 0; i < symbolsCount; i++) {
            setTimeout(() => {
              triggerElement.textContent += ' <3';
              navigator.vibrate(20);
              if (i === symbolsCount - 1) update();
            }, 30 * i);
          }
        }

        prevStep = step;
      }

      triggerElement.addEventListener('click', click, false);
    })();

    (function () {
      const draggableEl = document.querySelector('.header');
      const dragTrigger = document.querySelector('.header__drag');
      const secretArea = document.querySelector('.header__secret');
      const headerHeight = getComputedStyle(document.documentElement).getPropertyValue('--header-height');

      let isDragged = false;
      let startPosition = null;
      let prevPosition = null;
      let currentPosition = null;

      let vibrateDistance = 0;

      let dragDirection = null;

      function updateTranslate() {
        draggableEl.style.transform = `translateY(${currentPosition}px) translateY(-${headerHeight})`;
      }

      function dragStart(e) {
        isDragged = true;
        draggableEl.style.transition = '';
        startPosition = e.clientY || e.touches[0].clientY;
      }

      function dragEnd() {
        if (!isDragged) return;

        isDragged = false;
        startPosition = null;
        vibrateDistance = 0;

        // Whether stick header to the end or not
        currentPosition > window.innerHeight / (dragDirection === 'down' ? 4 : 1.3)
          ? draggableEl.style.transform = `translateY(${window.innerHeight}px) translateY(-${headerHeight})`
          : draggableEl.style.transform = ``;

        draggableEl.style.transition = 'transform 0.5s ease-out';
        draggableEl.addEventListener('transitionend', () => draggableEl.style.transition = '');
      }

      function dragMove(e) {
        if (!isDragged) return;

        currentPosition = e.clientY || e.touches[0].clientY;
        updateTranslate();

        if (currentPosition > vibrateDistance + 40) {
          navigator.vibrate(30);
          vibrateDistance = currentPosition;
        }

        dragDirection = currentPosition > prevPosition ? 'down' : 'up';
        prevPosition = currentPosition;

        console.log(dragDirection);

        // Show secret zone if drag more than 1/4
        currentPosition > window.innerHeight / 4
          ? secretArea.classList.add('header__secret--visible')
          : secretArea.classList.remove('header__secret--visible');
      }

      dragTrigger.addEventListener('mousedown', dragStart, false);
      dragTrigger.addEventListener('touchstart', dragStart, false);
      document.addEventListener('mousemove', dragMove, true);
      document.addEventListener('touchmove', dragMove, true);
      document.addEventListener('mouseup', dragEnd, false);
      document.addEventListener('touchend', dragEnd, false);
    })();
  }, []);

  return (
    <div className="App">
      <header className="header">
        <div className="header__secret">
          <div className="pokeball">
            <div className="pokeball__body">
              <svg xmlns="http://www.w3.org/2000/svg" width="362" height="362" viewBox="0 0 362 362" fill="none">
                <path fill-rule="evenodd" clip-rule="evenodd"
                      d="M165.8 0.619995C129.242 3.47199 95.848 16.974 65.4 41.217C45.783 56.835 26.503 82.057 16.03 105.8C15.205 107.67 14.264 109.792 13.939 110.516C3.49299 133.762 -2.18801 172.752 0.929986 199.8C1.97399 208.852 4.27699 221.861 5.82799 227.469C17.234 268.695 39.489 301.764 72.317 326.268C113.327 356.879 166.247 368.556 217.8 358.368C288.966 344.304 345.855 286.393 359.031 214.6C359.253 213.39 359.626 211.427 359.86 210.238C360.094 209.049 360.44 206.439 360.63 204.438C360.82 202.437 361.156 199.09 361.377 197C361.88 192.233 361.89 172.536 361.391 167.2C361.186 165 360.844 161.264 360.632 158.899C360.419 156.533 360.161 154.46 360.057 154.292C359.953 154.125 359.673 152.55 359.435 150.794C358.952 147.238 358.851 146.76 356.605 137.358C336.095 51.503 255.345 -6.36601 165.8 0.619995ZM201.4 10.777C279.961 20.122 342.538 83.172 351.175 161.683C352.583 174.487 353.588 174.191 335.319 166.365C312.385 156.541 303.339 153.247 290.936 150.203C281.226 147.82 281.36 147.911 279.573 142.479C262.679 91.126 191.319 85.624 167.001 133.799C164.747 138.262 165.011 138.177 151 138.995C111.317 141.313 74.739 150.089 23.294 169.636C8.93999 175.09 9.39099 175.344 10.808 162.6C14.469 129.687 26.499 100.412 47.066 74.365C49.34 71.486 52.584 67.346 54.275 65.165C62.546 54.499 73.833 45.493 94.2 33.311C117.051 19.642 141.778 12.035 169.8 10.051C175.092 9.67599 196.229 10.162 201.4 10.777ZM229.448 121.587C260.599 127.043 273.059 165.571 250.808 187.634C231.174 207.102 199.066 201.439 187.381 176.448C174.234 148.331 198.85 116.229 229.448 121.587ZM164.957 184.921C165.97 185.464 166.987 186.821 169.078 190.421C191.045 228.23 241.622 232.449 268.478 198.715C273.075 192.94 273.205 192.906 282.4 195.012C299.758 198.988 321.071 205.611 340.8 213.159C348.863 216.243 349.195 216.731 347.622 223.165C340.795 251.094 325.499 277.229 302.402 300.429C222.884 380.299 89.961 363.404 32.885 266.172C22.418 248.341 12.432 220.376 15.502 217.492C17.157 215.938 42.722 207.033 58.692 202.45C62.096 201.473 66.124 200.028 67.641 199.24C73.775 196.055 105.543 189.593 128.6 186.841C148.236 184.497 162.738 183.731 164.957 184.921Z"
                      fill="#454244"></path>
                <path fill-rule="evenodd" clip-rule="evenodd"
                      d="M169.8 10.051C139.014 12.23 112.839 20.96 87.487 37.502C84.785 39.265 82.636 40.769 82.711 40.844C82.786 40.919 85.177 40.357 88.024 39.594C118 31.561 138.089 44.867 134.005 70.05C129.822 95.839 102.616 118.358 75.6 118.39C51.214 118.42 40.342 101.476 48.595 76.304C49.478 73.612 50.2 71.197 50.2 70.938C50.2 70.054 42.935 79.59 38.264 86.605C22.843 109.766 13.946 134.392 10.808 162.6C9.39097 175.344 8.93997 175.09 23.294 169.636C74.739 150.089 111.317 141.313 151 138.995C165.011 138.177 164.747 138.262 167.001 133.799C191.319 85.624 262.679 91.126 279.573 142.479C281.36 147.911 281.226 147.82 290.936 150.203C303.339 153.247 312.385 156.541 335.319 166.365C353.588 174.191 352.583 174.487 351.175 161.683C341.226 71.243 260.361 3.63898 169.8 10.051Z"
                      fill="#F23B2B"></path>
                <path fill-rule="evenodd" clip-rule="evenodd"
                      d="M85.2 40.292C75.484 42.766 51.736 64.168 49.894 72.111C49.653 73.15 49.335 74.36 49.187 74.8C49.039 75.24 49.791 74.116 50.859 72.302C59.082 58.33 72.567 46.624 88.2 39.885C89.656 39.258 88.817 39.372 85.2 40.292ZM53 110.4C53.746 111.17 54.447 111.8 54.557 111.8C54.667 111.8 54.146 111.17 53.4 110.4C52.654 109.63 51.953 109 51.843 109C51.733 109 52.254 109.63 53 110.4ZM216 121.589C185.01 127.312 173.098 165.559 195.37 187.83C223.306 215.767 270.437 189.027 260.783 150.718C255.736 130.689 236.052 117.886 216 121.589ZM232.973 123.377C266.957 133.283 271.047 179.137 239.31 194.41C208.475 209.25 175.163 178.549 187.433 146.6C194.357 128.57 214.883 118.103 232.973 123.377ZM216.774 130.989C193.128 135.99 185.196 166.029 203.176 182.487C221.897 199.624 252.6 185.903 252.6 160.4C252.6 141.36 235.216 127.089 216.774 130.989ZM230.8 134.353C242.33 138.053 250.007 148.075 249.986 159.4C249.937 185.054 220.172 196.874 202.818 178.13C184.503 158.349 205.111 126.109 230.8 134.353ZM152.427 184.629C123.856 186.342 76.892 194.436 67.641 199.24C66.124 200.028 62.096 201.473 58.692 202.45C42.722 207.033 17.157 215.938 15.502 217.492C12.432 220.376 22.418 248.341 32.885 266.172C89.961 363.404 222.884 380.299 302.402 300.429C322.696 280.045 336.088 258.956 344.205 234.6C348.893 220.536 349.253 217.693 346.6 215.733C340.978 211.581 283.416 193.838 275.126 193.702C272.866 193.664 271.947 194.357 268.478 198.715C241.622 232.449 191.045 228.23 169.078 190.421C165.155 183.669 165.638 183.837 152.427 184.629ZM164.869 186.109C165.346 186.489 166.896 188.805 168.312 191.255C176.596 205.586 187.227 214.396 202.2 219.338C225.943 227.174 252.809 219.719 267.898 201.106C272.825 195.029 273.101 194.795 275.272 194.844C284.68 195.056 343.741 213.664 346.631 217.326C348.891 220.191 340.454 245.084 331.897 260.8C309.473 301.983 244.706 326.446 187.4 315.377C130.676 304.42 84.336 263.16 67.55 208.666L66.03 203.732L66.815 202.278C68.4 199.343 75.695 197.109 97.6 192.847C124.458 187.622 162.039 183.858 164.869 186.109Z"
                      fill="#A39B9B"></path>
                <path fill-rule="evenodd" clip-rule="evenodd"
                      d="M97.4 38.784C76.402 42.242 52.88 63.274 47.95 83C40.217 113.94 74.34 128.35 106 107.515C145.97 81.211 139.788 31.804 97.4 38.784ZM219 123.45C189.239 125.934 175.286 163.418 195.975 185.307C219.465 210.16 261.04 193.146 259.692 159.233C258.809 137.043 241.24 121.593 219 123.45ZM230.8 129.991C252.269 135.622 261.103 161.588 247.562 179.266C233.676 197.396 205.487 194.626 195.158 174.117C183.267 150.504 205.248 123.29 230.8 129.991ZM219.8 134.588C198.577 137.537 189.681 163.576 204.832 178.4C216.769 190.079 236.612 187.676 244.926 173.544C255.782 155.094 240.683 131.686 219.8 134.588ZM151.6 186.87C129.343 188.265 102.201 192.437 79.107 198.012C67.881 200.722 68.106 200.449 70.596 208.298C98.156 295.163 195.028 338.753 278.672 301.927C298.205 293.327 319.977 277.438 327.352 266.4C335.908 253.594 348.329 220.25 345.497 217.688C341.925 214.455 289.23 197.903 276.371 195.975C274.025 195.623 273.387 196.078 269.562 200.834C242.165 234.897 189.126 230.112 167.213 191.6C165.961 189.4 164.647 187.375 164.292 187.1C163.681 186.626 157.325 186.511 151.6 186.87Z"
                      fill="#FBFBFB"></path>
                <path fill-rule="evenodd" clip-rule="evenodd"
                      d="M96.8 37.639C74.352 41.618 49.364 65.388 46.168 85.803C40.384 122.75 88.661 130.575 119.602 97.706C147.382 68.195 133.325 31.165 96.8 37.639ZM114.193 39.398C148.073 49.093 133.149 100.057 92.2 114.507C55.369 127.504 33.194 96.789 56.792 65.462C71.84 45.486 96.438 34.317 114.193 39.398ZM215.445 122.794C185.875 129.481 174.829 164.689 195.481 186.43C222.068 214.419 269.272 188.595 259.873 151.203C254.91 131.458 234.591 118.465 215.445 122.794ZM230.494 124.018C258.17 129.394 269.51 164.479 250.231 185.085C232.995 203.508 203.135 200.232 190.893 178.574C175.203 150.817 199.084 117.916 230.494 124.018ZM217.955 129.372C197.513 132.642 185.825 155.583 195.158 174.117C206.849 197.332 240.297 196.902 251.146 173.397C261.568 150.816 242.447 125.454 217.955 129.372ZM232.866 132.067C261.206 142.427 258.242 183.35 228.708 189.47C205.343 194.313 185.976 169.794 195.843 147.861C202.015 134.14 218.868 126.951 232.866 132.067ZM217 133.595C197.14 138.064 189.099 163.313 202.818 178.13C220.172 196.874 249.937 185.054 249.986 159.4C250.017 143.047 233.258 129.937 217 133.595ZM228.2 135.063C245.351 138.329 253.974 158.166 244.926 173.544C235.34 189.837 210.802 189.866 200.919 173.596C193.409 161.233 198.115 144.11 210.836 137.515C216.823 134.411 221.389 133.767 228.2 135.063ZM153 185.671C131.009 186.903 102.194 191.275 79.308 196.853C69.562 199.228 68.125 199.852 66.815 202.278L66.03 203.732L67.55 208.666C84.336 263.16 130.676 304.42 187.4 315.377C244.706 326.446 309.473 301.983 331.897 260.8C340.454 245.084 348.891 220.191 346.631 217.326C343.741 213.664 284.68 195.056 275.272 194.844C273.101 194.795 272.825 195.029 267.898 201.106C252.809 219.719 225.943 227.174 202.2 219.338C187.227 214.396 176.596 205.586 168.312 191.255C164.651 184.92 164.884 185.006 153 185.671ZM164.292 187.1C164.647 187.375 165.961 189.4 167.213 191.6C189.126 230.112 242.165 234.897 269.562 200.834C273.387 196.078 274.025 195.623 276.371 195.975C289.23 197.903 341.925 214.455 345.497 217.688C347.639 219.626 341.02 239.985 332.997 256.139C327.425 267.357 324.013 271.736 315 279.235C231.096 349.046 103.502 312.012 70.596 208.298C68.73 202.415 68.732 201.366 70.613 200.393C72.775 199.275 90.673 195.175 103.6 192.837C127.344 188.542 161.935 185.272 164.292 187.1Z"
                      fill="#AAA7A7"></path>
              </svg>
            </div>
            <div className="pokeball__shadow">
              <svg xmlns="http://www.w3.org/2000/svg" width="362" height="69" viewBox="0 0 362 69" fill="none">
                <path
                  d="M362 34.5C362 53.554 280.964 69 181 69C81.0365 69 0 53.554 0 34.5C0 15.446 81.0365 0 181 0C280.964 0 362 15.446 362 34.5Z"
                  fill="#C4C4C4"></path>
              </svg>
            </div>
          </div>
        </div>
        <div className="header__container">
          <div className="header__logo">
            <a href="#">
              <img src="../my-app/public/favicon/favicon-32x32.png" alt="logo" title="logo" />
            </a>
          </div>
          <div className="header__drag">
            <span className="header__drag-angle">︾</span>
            <span className="header__drag-angle">︾</span>
            <span className="header__drag-angle">︾</span>
          </div>
        </div>
      </header>

      <section id="bounce-harm" className="fun-block">
        <h1 className="fun-block__title fun-block__title--step-1">This's my webpage</h1>
      </section>
    </div>
  );
}

export default App;
